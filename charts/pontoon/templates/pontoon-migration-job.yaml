apiVersion: batch/v1
kind: Job
metadata:
  name: '{{ include "pontoon.fullname" . }}-migration-job-{{ randAlphaNum 4 | lower }}'
  labels:
    app: {{ include "pontoon.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: "pontoon-migration-job"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 10
  template:
    metadata:
      name: '{{ include "pontoon.fullname" . }}-migration-job'
      labels:
        app: {{ include "pontoon.fullname" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        component: "pontoon-migration-job"
      {{- if .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ .name | quote }}
      {{- end }}
      serviceAccountName: {{ include "pontoon.serviceAccountName" . }}
      restartPolicy: Never
      {{- if .Values.migrationJob.initContainers }}
      initContainers:
        {{- if .Values.migrationJob.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.migrationJob.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: pontoon-migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: "{{ include "pontoon.fullname" . }}-secrets"
          {{- if or .Values.migrationJob.command .Values.migrationJob.args }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.migrationJob.command "context" $) | nindent 10 }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.migrationJob.args "context" $) | nindent 10 }}
          {{- else }}
          command: ["python"]
          args: ["manage.py", "migrate"]
          {{- end }}
          env:
            - name: SITE_URL
              value: {{ .Values.siteUrl | quote }}
            {{- include "common.tplvalues.render" (dict "value" .Values.defaultEnvVars "context" $) | nindent 12 }}
            {{- if .Values.extraSettingsModule }}
            - name: DJANGO_SETTINGS_MODULE
              value: "pontoon.settings.custom"
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
            {{- include "pontoon.database_url" . | indent 12 }}
            {{- include "pontoon.rabbitmq_url" . | indent 12 }}
          volumeMounts:
            {{- if .Values.extraSettingsModule }}
            - mountPath: "{{ .Values.pontoonHome }}/pontoon/settings/custom.py"
              name: "pontoon-settings"
              subPath: "custom.py"
            {{- end }}
            {{- if .Values.migrationJob.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.migrationJob.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.extraSettingsModule }}
        - name: "pontoon-settings"
          configMap:
            name: "{{ include "pontoon.fullname" . }}-settings-configmap"
        {{- end }}
        {{- if .Values.migrationJob.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.migrationJob.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
